{
  "lambda": [
    "lambda:CreateFunction",
    "lambda:DeleteFunction", 
    "lambda:UpdateFunctionCode",
    "lambda:UpdateFunctionConfiguration",
    "lambda:GetFunction",
    "lambda:ListFunctions",
    "lambda:AddPermission",
    "lambda:RemovePermission",
    "lambda:CreateEventSourceMapping",
    "lambda:DeleteEventSourceMapping",
    "lambda:UpdateEventSourceMapping",
    "lambda:ListEventSourceMappings",
    "lambda:TagResource",
    "lambda:UntagResource",
    "lambda:ListTags",
    "logs:CreateLogGroup",
    "logs:CreateLogStream",
    "logs:DescribeLogGroups",
    "logs:DescribeLogStreams",
    "logs:TagResource",
    "iam:PassRole"
  ],
  "s3": [
    "s3:CreateBucket",
    "s3:DeleteBucket",
    "s3:GetBucketLocation",
    "s3:GetBucketNotification",
    "s3:PutBucketNotification",
    "s3:DeleteBucketNotification",
    "s3:GetBucketVersioning",
    "s3:PutBucketVersioning",
    "s3:GetBucketAcl",
    "s3:PutBucketAcl",
    "s3:GetBucketPolicy",
    "s3:PutBucketPolicy",
    "s3:DeleteBucketPolicy",
    "s3:GetBucketTagging",
    "s3:PutBucketTagging",
    "s3:DeleteBucketTagging",
    "s3:ListBucket"
  ],
  "dynamodb": [
    "dynamodb:CreateTable",
    "dynamodb:DeleteTable",
    "dynamodb:DescribeTable",
    "dynamodb:UpdateTable",
    "dynamodb:ListTables",
    "dynamodb:TagResource",
    "dynamodb:UntagResource",
    "dynamodb:ListTagsOfResource",
    "dynamodb:DescribeTimeToLive",
    "dynamodb:UpdateTimeToLive"
  ],
  "ec2": [
    "ec2:CreateSecurityGroup",
    "ec2:DeleteSecurityGroup",
    "ec2:DescribeSecurityGroups",
    "ec2:AuthorizeSecurityGroupIngress",
    "ec2:AuthorizeSecurityGroupEgress",
    "ec2:RevokeSecurityGroupIngress",
    "ec2:RevokeSecurityGroupEgress",
    "ec2:DescribeVpcs",
    "ec2:DescribeSubnets",
    "ec2:DescribeNetworkInterfaces",
    "ec2:CreateNetworkInterface",
    "ec2:DeleteNetworkInterface",
    "ec2:DescribeAvailabilityZones",
    "ec2:CreateTags",
    "ec2:DescribeTags"
  ],
  "rds": [
    "rds:CreateDBInstance",
    "rds:DeleteDBInstance",
    "rds:DescribeDBInstances",
    "rds:ModifyDBInstance",
    "rds:CreateDBSubnetGroup",
    "rds:DeleteDBSubnetGroup",
    "rds:DescribeDBSubnetGroups",
    "rds:CreateDBParameterGroup",
    "rds:DeleteDBParameterGroup",
    "rds:DescribeDBParameterGroups",
    "rds:ModifyDBParameterGroup",
    "rds:AddTagsToResource",
    "rds:RemoveTagsFromResource",
    "rds:ListTagsForResource",
    "rds:DescribeDBEngineVersions"
  ],
  "cloudformation": [
    "cloudformation:CreateStack",
    "cloudformation:UpdateStack",
    "cloudformation:DeleteStack",
    "cloudformation:DescribeStacks",
    "cloudformation:DescribeStackEvents",
    "cloudformation:DescribeStackResources",
    "cloudformation:DescribeStackResource",
    "cloudformation:GetTemplate",
    "cloudformation:ListStacks",
    "cloudformation:ValidateTemplate",
    "cloudformation:CreateChangeSet",
    "cloudformation:DeleteChangeSet",
    "cloudformation:DescribeChangeSet",
    "cloudformation:ExecuteChangeSet",
    "cloudformation:ListChangeSet"
  ],
  "iam": [
    "iam:CreateRole",
    "iam:DeleteRole",
    "iam:GetRole",
    "iam:PassRole",
    "iam:AttachRolePolicy",
    "iam:DetachRolePolicy",
    "iam:PutRolePolicy",
    "iam:DeleteRolePolicy",
    "iam:GetRolePolicy",
    "iam:ListRolePolicies",
    "iam:TagRole",
    "iam:UntagRole",
    "iam:ListAttachedRolePolicies",
    "iam:UpdateAssumeRolePolicy"
  ],
  "serverless_deployment": [
    "s3:GetObject",
    "s3:PutObject",
    "s3:DeleteObject",
    "s3:ListBucket"
  ]
}